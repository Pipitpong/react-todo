[{"D:\\web\\react-todo\\src\\index.js":"1","D:\\web\\react-todo\\src\\App.js":"2","D:\\web\\react-todo\\src\\ListContext.js":"3","D:\\web\\react-todo\\src\\page\\HomePage\\index.js":"4","D:\\web\\react-todo\\src\\components\\Navbar\\index.js":"5","D:\\web\\react-todo\\src\\page\\TodoPage\\index.js":"6","D:\\web\\react-todo\\src\\components\\Button\\index.js":"7","D:\\web\\react-todo\\src\\components\\List\\index.js":"8","D:\\web\\react-todo\\src\\components\\Input\\index.js":"9"},{"size":442,"mtime":1612112626308,"results":"10","hashOfConfig":"11"},{"size":653,"mtime":1612357077615,"results":"12","hashOfConfig":"11"},{"size":391,"mtime":1612112626305,"results":"13","hashOfConfig":"11"},{"size":142,"mtime":1612365382956,"results":"14","hashOfConfig":"11"},{"size":665,"mtime":1612112626307,"results":"15","hashOfConfig":"11"},{"size":1543,"mtime":1612370589264,"results":"16","hashOfConfig":"11"},{"size":290,"mtime":1612364126331,"results":"17","hashOfConfig":"11"},{"size":721,"mtime":1612374887500,"results":"18","hashOfConfig":"11"},{"size":268,"mtime":1612363411495,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"vlcxgs",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\web\\react-todo\\src\\index.js",[],["40","41"],"D:\\web\\react-todo\\src\\App.js",[],"D:\\web\\react-todo\\src\\ListContext.js",[],"D:\\web\\react-todo\\src\\page\\HomePage\\index.js",[],"D:\\web\\react-todo\\src\\components\\Navbar\\index.js",[],"D:\\web\\react-todo\\src\\page\\TodoPage\\index.js",["42"],"import { useState } from \"react\";\r\nimport styles from \"./Todo.module.css\";\r\n// import components\r\nimport { Input } from \"../../components/Input\";\r\nimport { Button } from \"../../components/Button\";\r\nimport { List } from \"../../components/List\";\r\nimport { useListContext } from \"../../ListContext\";\r\n\r\nexport function TodoPage() {\r\n  const [text, setText] = useState(\"\");\r\n  const [list, setList] = useListContext();\r\n  const [keep, setKeep] = useState(0);\r\n\r\n  function addList() {\r\n    if (text == \"\") return;\r\n    setList([...list, { line: keep, text, finish: false }]);\r\n    setText(\"\");\r\n    setKeep(keep + 1);\r\n\r\n    console.log(\"add\", keep);\r\n  }\r\n  function deleteList(line) {\r\n    setList(list.filter((item) => item.line !== line));\r\n  }\r\n\r\n  function toggleList(line) {\r\n    setList(\r\n      list.map((item) =>\r\n        item.line === line ? { ...item, finish: !item.finish } : item\r\n      )\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n      <div className={styles.page}>\r\n        <div className={styles.input}>\r\n          {/* prop */}\r\n          <Input text={text} setText={setText} />\r\n          {/* children */}\r\n          <Button onClick={() => addList()}></Button>\r\n        </div>\r\n        <h2>\r\n          <p>TODO LIST</p>\r\n        </h2>\r\n\r\n        {list.map((item) => (\r\n          <List\r\n            key={item.line}\r\n            todo={item}\r\n            deleteList={() => deleteList(item.line)}\r\n            toggleList={() => toggleList(item.line)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\web\\react-todo\\src\\components\\Button\\index.js",[],"D:\\web\\react-todo\\src\\components\\List\\index.js",[],"D:\\web\\react-todo\\src\\components\\Input\\index.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":15,"column":14,"nodeType":"49","messageId":"50","endLine":15,"endColumn":16},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]